"""empty message

Revision ID: a903f5d40e61
Revises: 
Create Date: 2022-08-08 16:38:48.957748

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a903f5d40e61'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('course',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('subject', sa.String(length=32), nullable=True),
    sa.Column('selected_day', sa.String(length=32), nullable=True),
    sa.Column('start_time', sa.String(length=10), nullable=True),
    sa.Column('end_time', sa.String(length=10), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('grades',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('grade', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('grades_possible',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('grade_name', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('modalities_possible',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('modality', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('students',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.String(length=32), nullable=True),
    sa.Column('last_name', sa.String(length=32), nullable=True),
    sa.Column('email', sa.String(length=32), nullable=True),
    sa.Column('phone', sa.String(length=32), nullable=True),
    sa.Column('phone_parents', sa.String(length=32), nullable=True),
    sa.Column('street', sa.String(length=32), nullable=True),
    sa.Column('city', sa.String(length=32), nullable=True),
    sa.Column('zipcode', sa.String(length=32), nullable=True),
    sa.Column('school', sa.String(length=32), nullable=True),
    sa.Column('grade', sa.String(length=32), nullable=True),
    sa.Column('modality', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subject_possible',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('subject_name', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subjects',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('subject', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('upload',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('cv_filename', sa.String(length=100), nullable=True),
    sa.Column('cv_data', sa.LargeBinary(), nullable=True),
    sa.Column('b3_filename', sa.String(length=100), nullable=True),
    sa.Column('b3_data', sa.LargeBinary(), nullable=True),
    sa.Column('id_filename', sa.String(length=100), nullable=True),
    sa.Column('id_data', sa.LargeBinary(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('first_name', sa.String(length=120), nullable=True),
    sa.Column('last_name', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('role', sa.String(length=64), nullable=True),
    sa.Column('status', sa.String(length=64), nullable=True),
    sa.Column('upload_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['upload_id'], ['upload.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('all_subjects',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('all_users',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('association_student_course',
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], )
    )
    op.create_table('association_tutor_course',
    sa.Column('tutor_id', sa.Integer(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['tutor_id'], ['user.id'], )
    )
    op.create_table('grades_table',
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('grade_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['grade_id'], ['grades.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], )
    )
    op.create_table('interviews',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('interview_date', sa.String(length=64), nullable=True),
    sa.Column('interview_time', sa.String(length=32), nullable=True),
    sa.Column('interviewer', sa.String(length=32), nullable=True),
    sa.Column('is_accepted', sa.Boolean(), nullable=True),
    sa.Column('message', sa.String(length=100), nullable=True),
    sa.Column('is_done', sa.String(length=500), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('more_about_me',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('why', sa.String(length=120), nullable=True),
    sa.Column('when', sa.String(length=64), nullable=True),
    sa.Column('inquiry', sa.String(length=32), nullable=True),
    sa.Column('experience', sa.String(length=32), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('my_information',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('address', sa.String(length=120), nullable=True),
    sa.Column('city', sa.String(length=64), nullable=True),
    sa.Column('zipcode', sa.String(length=32), nullable=True),
    sa.Column('email2', sa.String(length=32), nullable=True),
    sa.Column('phone', sa.String(length=32), nullable=True),
    sa.Column('birth_date', sa.String(length=32), nullable=True),
    sa.Column('short_text', sa.String(length=400), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('subject_to_study',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('subject_name', sa.String(length=32), nullable=True),
    sa.Column('subject_owner', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['subject_owner'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tutoring',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('maths', sa.String(length=120), nullable=True),
    sa.Column('physics', sa.String(length=120), nullable=True),
    sa.Column('svt', sa.String(length=120), nullable=True),
    sa.Column('french', sa.String(length=120), nullable=True),
    sa.Column('english', sa.String(length=120), nullable=True),
    sa.Column('spanish', sa.String(length=120), nullable=True),
    sa.Column('history', sa.String(length=120), nullable=True),
    sa.Column('geopolitics', sa.String(length=120), nullable=True),
    sa.Column('modalities', sa.String(length=240), nullable=True),
    sa.Column('engagement', sa.String(length=32), nullable=True),
    sa.Column('start_date', sa.String(length=32), nullable=True),
    sa.Column('end_date', sa.String(length=32), nullable=True),
    sa.Column('frequency', sa.Integer(), nullable=True),
    sa.Column('monday', sa.String(length=32), nullable=True),
    sa.Column('tuesday', sa.String(length=10), nullable=True),
    sa.Column('wednesday', sa.String(length=10), nullable=True),
    sa.Column('thursday', sa.String(length=10), nullable=True),
    sa.Column('friday', sa.String(length=10), nullable=True),
    sa.Column('sunday', sa.String(length=10), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('availabilities',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('day_possible', sa.String(length=32), nullable=True),
    sa.Column('day_time_from', sa.String(length=32), nullable=True),
    sa.Column('day_time_to', sa.String(length=32), nullable=True),
    sa.Column('availability_owner', sa.Integer(), nullable=True),
    sa.Column('user_avail_owner', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['availability_owner'], ['students.id'], ),
    sa.ForeignKeyConstraint(['user_avail_owner'], ['tutoring.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('modalities',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('modality', sa.String(length=32), nullable=True),
    sa.Column('user_modality_owner', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_modality_owner'], ['tutoring.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subjects_grades',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('subject', sa.String(length=32), nullable=True),
    sa.Column('grade_from', sa.String(length=32), nullable=True),
    sa.Column('grade_to', sa.String(length=32), nullable=True),
    sa.Column('user_subjects_owner', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_subjects_owner'], ['tutoring.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('subjects_grades')
    op.drop_table('modalities')
    op.drop_table('availabilities')
    op.drop_table('tutoring')
    op.drop_table('subject_to_study')
    op.drop_table('my_information')
    op.drop_table('more_about_me')
    op.drop_table('interviews')
    op.drop_table('grades_table')
    op.drop_table('association_tutor_course')
    op.drop_table('association_student_course')
    op.drop_table('all_users')
    op.drop_table('all_subjects')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('upload')
    op.drop_table('subjects')
    op.drop_table('subject_possible')
    op.drop_table('students')
    op.drop_table('modalities_possible')
    op.drop_table('grades_possible')
    op.drop_table('grades')
    op.drop_table('course')
    # ### end Alembic commands ###
